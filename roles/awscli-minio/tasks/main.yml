---
# tasks file for awscli
- name: Install awscli
  package:
      state: present # required. Whether to install (C(present)), or remove (C(absent)) a package. Other states depend on the underlying package module, i.e C(latest).
      name: awscli # required. Package name, or package specifier with version, like C(name-1.0).,Be aware that packages are not always named the same and this module will not 'translate' them per distro.
      #use: auto # not required. The required package manager module to use (yum, apt, etc). The default 'auto' will use existing facts or try to autodetect it.,You should only use this field if the automatic selection is not working for some reason.
- name: Provide Config
  file:
      path: ~/.aws # required. Path to the file being managed.
      state: directory # not required. choices: absent;directory;file;hard;link;touch. If C(directory), all intermediate subdirectories will be created if they do not exist. Since Ansible 1.7 they will be created with the supplied permissions. If C(file), the file will NOT be created if it does not exist; see the C(touch) value or the M(copy) or M(template) module if you want that behavior.  If C(link), the symbolic link will be created or changed. Use C(hard) for hardlinks. If C(absent), directories will be recursively deleted, and files or symlinks will be unlinked. Note that C(absent) will not cause C(file) to fail if the C(path) does not exist as the state did not change. If C(touch) (new in 1.4), an empty file will be created if the C(path) does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way `touch` works from the command line).
  register: fresh_dir
- name: check if config file exists
  stat: 
      path: ~/.aws/config
  register: check_config
- name: Create Config file
  copy:
    dest: ~/.aws/config
    content: |
       [default]
       region=eu-west-2
       output=json
    #state: present
  when: check_config.stat.exists == False
- name: check if credentials file exists
  stat: 
      path: ~/.aws/credentials
  register: check_creds
- name: Create Credentials file
  copy:
    dest: ~/.aws/credentials
    content: |
      [default]
      aws_access_key_id={{prompt_aws_access_key_id | default(default_id)}}
      aws_secret_access_key={{prompt_aws_secret_key | default(default_secret)}}

- name: Create Credentials file
  copy:
    dest: ~/.aws/credentials
    content: |
      [default]
      aws_access_key_id={{default_id}}
      aws_secret_access_key={{default_secret}}
    #state: present
  #when: check_creds.stat.exists == False